name: Build

on:
  pull_request:
  push:
  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        family:
        # Alphabetical order, use board name in pico-sdk
        #- 'adafruit_feather_rp2040'
        #- 'adafruit_itsybitsy_rp2040'
        #- 'adafruit_qtpy_rp2040'
        - 'pico'
        #- 'pimoroni_keybow2040'
        #- 'pimoroni_picolipo_16mb'
        #- 'pimoroni_picolipo_4mb'
        #- 'pimoroni_picosystem'
        #- 'pimoroni_tiny2040'
        #- 'sparkfun_micromod'
        #- 'sparkfun_promicro'
        #- 'sparkfun_thingplus'
    steps:
    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout pico-sdk
      run: |
        git clone --depth 1 https://github.com/raspberrypi/pico-sdk ~/pico-sdk
        cd ~/pico-sdk/
        git submodule update --init
        echo >> $GITHUB_ENV PICO_SDK_PATH=~/pico-sdk

    - name: Set Toolchain URL
      run: echo >> $GITHUB_ENV TOOLCHAIN_URL=https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack/releases/download/v10.2.1-1.1/xpack-arm-none-eabi-gcc-10.2.1-1.1-linux-x64.tar.gz

    - name: Cache Toolchain
      uses: actions/cache@v2
      id: cache-toolchain
      with:
        path: ~/cache/
        key: ${{ runner.os }}-21-05-20-${{ env.TOOLCHAIN_URL }}

    - name: Install Toolchain
      if: steps.cache-toolchain.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/cache/toolchain
        wget --progress=dot:mega $TOOLCHAIN_URL -O toolchain.tar.gz
        tar -C ~/cache/toolchain -xaf toolchain.tar.gz

    - name: Set Toolchain Path
      run: echo >> $GITHUB_PATH `echo ~/cache/toolchain/*/bin`

    - name: Build
      run: |
        mkdir build
        cd build
        cmake -D"PICO_BOARD=${{ matrix.family }}" ..
        make

    - uses: actions/upload-artifact@v2
      with:
        name: fatfs_reader-${{ matrix.family }}
        path: build/fatfs_read.uf2
